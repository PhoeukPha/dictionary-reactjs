export const data = {
    "Algorithm - ក្បួនដោះស្រាយ": [
        "ក្បួនដែលកុំព្យូទ័រប្រតិបត្តិតាមដើម្បីដោះស្រាយបញ្ហាឬបំពេញកិច្ចការណាមួយ។​"
    ],
    "Array - អារេ": [
        "បណ្តុំទិន្នន័យដែលមានទម្រង់ជាជួរមានដើមហើយចុង។ វត្ថុទាំងអស់នៅក្នុងអារេមានលំដាប់ថ្នាក់ដែលយើងអាចហៅវាបាន។ ឧទាហរណ៍៖ ដើម្បីហៅវត្ថុទីមួយនៅក្នុងអារេយើងសរសេរ​ <code>array[0]</code>។"
    ],
    "Argument - អាគុយម៉ង់": [
        "ទិន្នន័យឬតម្លៃដែលបញ្ជូលក្នុងអនុគមន៍ដើម្បីធ្វើការគណនា។ ឧទាហរណ៍៖ អនុគមន៍ <code>function add(x, y) {return x + y}</code> ត្រូវការអាគុយម៉ង់ x និង y ដើម្បីគណនារកចម្លើយ។"
    ],
    "Binary - គោលពីរ": [
        "ប្រព័ន្ធរាប់លេខដែលប្រើលេខ 0 និងលេខ 1 ប្រើប្រាស់ដោយកុំព្យូទ័រសម្រាប់មុខងារគ្រប់យ៉ាង។"
    ],
    "Boolean - ប៊ូលីន": [
        "ភាពពិតឬមិនពិត។"
    ],
    "Branch - សាខា": [
        "សំដៅទៅលើការបែកចេញជាសាខាផ្សេងគ្នាក្នុងប្រព័ន្ធគ្រប់គ្រងកំណែកូដ​ (ដូចជាប្រព័ន្ធ git ជាដើម)។",
        "ជម្រើសផ្លូវដែលកូដអាចប្រតិបត្តិតទៀតបាន។"
    ],
    "Break - បញ្ជប់": [
        "ជាទូទៅពាក្យនេះប្រើដើម្បីបញ្ជប់ប្រតិបត្តិ loop។"
    ],
    "Character - តួអក្សរ": [
        "តួអក្សរមួយតួ។ ឧទាហរណ៍៖ A, b, C, d, 0, ក, ខ។"
    ],
    "Code - កូដ": [
        "ភាសាកូដសម្រាប់យកទៅសរសេរបង្កើតកម្មវិធីកុំព្យូទ័រ។ ឧទាហរណ៍៖ C, Java, PHP។ ល។",
    ],
    "Comment - កំណត់ចំណាំ": [
        "កំណត់ចំណាំក្នុងកូដដែលកុំព្យូទ័រនឹងមិនប្រតិបត្តិ។"
    ],
    "Compiler - ប្រព័ន្ធបំលែង": [
        "ប្រព័ន្ធកម្មវិធីសម្រាប់បំលែងកូដពីទម្រង់ដែលមនុស្សអាចអាននិងកែប្រែបានទៅជាទម្រង់កូដដែលកុំព្យូទ័រអាចប្រើប្រាស់បាន។",
        "ប្រព័ន្ធកម្មវិធីដែលមានតួនាទីបំលែងប្រភពកូដ (source code) ទៅជាកូដម៉ាស៊ីន (machine code) សម្រាប់កុំព្យូទ័រប្រតិបត្តិតាម។",
    ],
    "Compiled code - កូដបំលែង": [
        "កូដដែលត្រូវបានបំលែងពីទម្រង់ដើមដែលមនុស្សអាចអាននិងកែប្រែបានទៅជាកូដសម្រាប់កុំព្យូទ័រដំណើរការ។"
    ],
    "Conditional - តាមលក្ខខណ្ឌ": [
        "ការដាក់លក្ខខណ្ឌ។",
        "កូដដែលប្រតិបត្តិនៅពេលកម្មវិធីត្រូវលក្ខខណ្ឌដែលបានកំណត់។"
    ],
    "CPU (central processing unit) - អង្គភាពដំណើរការកណ្តាល": [
        "ជាផ្នែកកុំព្យូទ័រដែលមានមុខងារជាខួរក្បាល"
    ],
    "Decode - ឌីកូដ": [
        "ដោះស្រាយកូដឬពាក្យសម្ងាត់ដែលបានឆ្លងកាត់ការអ៊ិនកូដ (encode)។",
        "ការបម្លែងទម្រង់អក្សរសម្ងាត់ឲ្យទៅជាទម្រង់ដើមវិញ។"
    ],
    "Declaration - ការប្រកាស": [
        "ការប្រកាសគឺជាកូដដែលប្រាប់កុំព្យូទ័រឲ្យតាងអថេរ បង្កើតអនុគមន៍ ឬអង្គភាពផ្សេងៗ។ ឧទាហរណ៍៖ ការប្រកាសអថេរនៅក្នុងភាសា Python អាចមានទម្រង់ <code>x = 1</code> នៅក្នុងភាសា JavaScript អាចមានទម្រង់ <code>let x = 1</code>។​ ល។"
    ],
    "Domain - ឈ្មោះរឺអាស័យដ្ឋានវឹបសាយ": [
        "អាស័យដ្ឋានរបស់គេហៈទំព័រ។ ឧទាហរណ៍៖ google.com",
    ],
    "E-banking - ធនាគារអេឡិចត្រូនិច": [
        "​ការទូទាត់ប្រតិបត្តិការធានាគារផ្សេងៗលើប្រព័ន្ទអ៊ីនធឺណែត។ ឧទាហរណ៍៖ ពេលអ្នកបង់ប្រាក់តាមប្រព័ន្ធបាគង។"
    ],
    "Encode - អ៊ិនកូដ": [
        "​បម្លែងទម្រង់អក្សរទៅជាទម្រង់សម្ងាត់ដែលត្រូវការពាក្យសម្ងាត់ឬរូបមន្តណាមួយដើម្បីឌីកូដ (decode) ​ឬបម្លែងមកទម្រង់ដើមវិញ។"
    ],
    "Environment - បរិស្ថាន": [
        "បរិស្ថានដែលកូដស្ថិននៅក្នុង។ ឧទាហរណ៍៖ បរិស្ថានសម្រាប់តេស្ត បរិស្ថានផ្លូវការ។"
    ],
    "Extraction - ការបន្លាយ": [
        "ការបន្លាយហ្វាល់ឬឯកសារឲ្យវាមានទំហំនិងទម្រង់ដូចដើម។ ឧទាហរណ៍៖ ពេលអ្នក extract ហ្វាល់ប្រភេទ zip។"
    ],
    "Float - លេខទស្សភាគ": [
        "លេខមានក្បៀសអាចជាលេខមានតម្លៃតូចជាងសូន្យ ធំជាងសូន្យ ឬស្មើសូន្យ។ ឧទាហរណ៍៖ -2.10, -103.3, 0, 1.02, 2.3, 35.6, 46.003។​ ល។"
    ],
    "Function - អនុគមន៍": [
        "កូដមានមុខងារជាក់លាក់ដែលមានអ្នកសរសេរកូដអាចហៅមកប្រើនៅកន្លែងផ្សេងៗក្នុងកម្មវិធី។"
    ],
    "Garbage collection - ការប្រមូលសំរាម": [
        "ដំណើរការស្វ័យប្រវត្តិលុបចោលទិន្នន័យក្នុង memory ដែលកម្មវិធីកុំព្យូទ័រលែងត្រូវការ​។"
    ],
    "Initialization - ការកំណត់ដំបូង": [
        "ក្នុងការសរសេរកូដ initialization គឺជាការកំណត់តម្លៃដើមឲ្យអថេរណាមួយ។ ឧទាហរណ៍៖ នៅក្នុងភាសា JavaScript យើងអាចកំណត់តម្លៃឲ្យអថេរ <code>x</code> ដោយសរសេរថា <code>let x = 1</code>។​​ បើយើងហៅអថេរនេះមកប្រើដោយមិនបានកំណត់តម្លៃដំបូង កម្មវិធីមិនអាចដំណើរការបាននោះទេ។"
    ],
    "Integer - លេខគត់": [
        "លេខគត់មិនមានក្បៀសអាចជាលេខមានតម្លៃតូចជាងសូន្យ ធំជាងសូន្យ ឬស្មើសូន្យ។ ឧទាហរណ៍៖ -2, -1, 0, 1, 2, 3, 4។ ល។"
    ],
    "IP address - អាស័យដ្ឋានអាយភី": [
        "លេខសំគាល់ពិសេសសម្រាប់ឧបករណ៍អេឡិចត្រូនិកទាំងឡាយដែលអាចភ្ជាប់អ៊ីនធឺណិតបាន។ ឧទាហរណ៍៖ 192.168.0.1។"
    ],
    "Loop - រង្វិលជុំ": [
        "កូដដែលដំណើរការវិលជុំម្តងហើយម្តងទៀតរហូតកម្មវិធីត្រូវលក្ខខណ្ឌណាមួយដែលបានកំណត់។"
    ],
    "Machine code - កូដម៉ាស៊ីន": [
        "កូដដែលមានទម្រង់ប្រព័ន្ធគោលពីរ (0 និង 1) ដែលខួរក្បាលរបស់កុំព្យូទ័រ (CPU) អាចប្រើប្រាស់បានដើម្បីបំពេញមុខងារផ្សេងៗ។"
    ],
    "Network - បណ្ដាញ": [
        "ប្រព័ន្ធភ្ជាប់ឧបករណ៍ផ្សេងៗដែលមានទំនាក់ទំនងជាមួយគ្នា។ ឧទាហរណ៍៖ បណ្តាញអ៊ីនធឺណិត។"
    ],
    "Operating system - ប្រព័ន្ធប្រតិបត្តិការ": [
        "ប្រព័ន្ធប្រតិបត្តិការ សរសេរកាត់ថា OS ជាប្រព័ន្ធកុំព្យូទ័រដែលសម្រួលទៅដល់ការប្រើប្រាស់កុំព្យូទ័រដើម្បីបំពេញមុខងារផ្សេងៗ។ ឧទាហរណ៍៖​ Windows, MacOS, Android។ ល។"
    ],
    "Package - កញ្ចប់កូដ": [
        "កញ្ចប់កូដដែលមានមុខងារពិសេសសម្រាប់បំពេញតួនាទីផ្សេងៗ។ ឧទាហរណ៍៖ កញ្ចប់ <code>requests</code> នៅក្នុងភាសា Python សម្រួលទៅដល់ការផ្ញើសំណើទៅកាន់​ URL ផ្សេងៗ។"
    ],
    "Peripheral - គ្រឿងឧបករណ៍កុំព្យូទ័រ": [
        "ឧបករណ៍ដែលភ្ជាប់ជាមួយនឹងកុំព្យូទ័រដើម្បីសម្រួលទៅដល់ការប្រើប្រាស់វា ឬសម្រាប់បន្ថែមមុខងារផ្សេងៗ។ ឧទាហរណ៍៖ mouse, keyboard, monitor។ ល។",
    ],
    "Return - លទ្ធផល": [
        "លទ្ធផលដែលទទួលបានពីអនុគមន៍។​ ឧទាហរណ៍៖ <code>return x + y</code>។"
    ],
    "Source code - ប្រភពកូដ": [
        "ប្រភពរបស់កូដដែលកុំព្យូទ័រត្រូវការដើម្បីដំឡើងកម្មវិធីឬធ្វើឲ្យកម្មវិធីដំណើរការ។",
        "កូដដែលមនុស្សអាចអានបាននិងកែប្រែបានឬកូដដែលមិនទាន់បានធ្វើការបំលែងទៅជាទម្រង់កូដដែលកុំព្យូទ័រត្រូវការដើម្បីដំណើរការ។"
    ],
    "Syntax - វាក្យសម្ពន្ធ": [
        "ជាក្បួនសម្រាប់សរសេរកូដដើម្បីឲ្យមានដំណើរការត្រឹមត្រូវ ប្រៀបបានទៅនឹងវេយ្យាករណ៍ក្នុងភាសាខ្មែរ។ ឧទាហរណ៍៖​ នៅក្នុងភាសា C យើងសរសេរ <code>printf('hello')</code> ប៉ុន្តែក្នុងភាសា Python យើងសរសេរ <code>print 'hello'</code>"
    ],
    "Type - ប្រភេទ": [
        "នៅក្នុងការសរសេរកូដ ទិន្នន័យទាំងអស់មានប្រភេទ​។ ឧទាហរណ៍៖ ប្រភេទអក្សរ​ (string), ប្រភេទលេខ​ (integer)។ ល។"
    ],
    "User experience - បទពិសោធន៍អ្នកប្រើប្រាស់": [
        "សរសេរកាត់ថា​ UX វាជាបទពិសោធន៍របស់អ្នកប្រើប្រាស់កម្មវិធីកុំព្យូទ័រផ្សេងៗ។ ឧទាហរណ៍៖ នៅពេលអ្នកប្រើប្រាស់ចង់ធ្វើសកម្មភាពអ្វីមួយ គាត់ត្រូវឆ្លងកាត់ជំហានអ្វីខ្លះ។"
    ],
    "User interface - ប្រព័ន្ធអន្តរកម្មអ្នកប្រើប្រាស់": [
        "សរសេរកាត់ថា​ UI វាជារូបរាងនិងទម្រង់របស់កម្មវិធីកុំព្យូទ័រដែលអ្នកប្រើប្រាស់ធ្វើអន្តរកម្មផ្សេងៗដូចជាការចុចនិងសរសេរ។​ ឧទាហរណ៍៖ ប៊ូតុងនៅលើគេហទំព័រ។"
    ],
    "Variable - អថេរ": [
        "ពាក្យឬតួអក្សរសម្រាប់សម្គាល់ឲ្យផ្នែកមួយនៃ memory ដែលយើងអាចហៅវាមកពិនិត្យមើលទិន្នន័យឬកែប្រែវាបាន។ ឧទាហរណ៍៖ <code>x = 1</code>។"
    ],
    "Web browser - កម្មវិធីរុករកបណ្តាញអ៊ីនធឺណិត": [
        "កម្មវិធីសម្រាប់បើកគេហៈទំព័រនិងឯកសារផ្សេងៗដែលមាននៅលើបណ្តាញអ៊ីនធឺណិត។ ឧទាហរណ៍៖ Chrome, Firefox, Opera។ ល។"
    ],
}